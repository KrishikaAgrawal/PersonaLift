'use strict';var p=require('fs/promises'),i=require('path'),_=require('os'),child_process=require('child_process'),net=require('net'),d=require('posthog-js');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var p__default=/*#__PURE__*/_interopDefault(p);var i__default=/*#__PURE__*/_interopDefault(i);var ___default=/*#__PURE__*/_interopDefault(_);var d__default=/*#__PURE__*/_interopDefault(d);var S=(n,e="")=>Object.keys(n).reduce((t,r)=>{let s=e.length?e+".":"";return typeof n[r]=="object"&&n[r]!==null&&!Array.isArray(n[r])?Object.assign(t,S(n[r],s+r)):t[s+r]=n[r],t},{}),P=n=>{let e={};for(let t in n){let r=t.split("."),s=e;for(let a=0;a<r.length;a++){let o=r[a];a===r.length-1?s[o]=n[t]:(s[o]=s[o]||{},s=s[o]);}}return e};function C(n){return n.replace(/([-_][a-z])/g,e=>e.toUpperCase().replace("-","").replace("_",""))}function m(n){return n.replace(/[A-Z]/g,e=>`_${e.toLowerCase()}`)}function h(n){return Object.keys(n).reduce((e,t)=>{let r=m(t);return e[r]=h(n[t]),e},{})}function c(n){return Array.isArray(n)?n.map(c):n!==null&&typeof n=="object"?Object.keys(n).reduce((e,t)=>{let r=C(t);return e[r]=c(n[t]),e},{}):n}function k(){return {openaiApiKey:"",deepgramApiKey:"",aiModel:"gpt-4o",aiUrl:"https://api.openai.com/v1",customPrompt:"Rules:\n    - You can analyze/view/show/access videos to the user by putting .mp4 files in a code block (we'll render it) like this: `/users/video.mp4`, use the exact, absolute, file path from file_path property\n    - Do not try to embed video in links (e.g. [](.mp4) or https://.mp4) instead put the file_path in a code block using backticks\n    - Do not put video in multiline code block it will not render the video (e.g. ```bash\n.mp4``` IS WRONG) instead using inline code block with single backtick\n    - Always answer my question/intent, do not make up things\n    ",port:3030,dataDir:"default",disableAudio:false,ignoredWindows:[],includedWindows:[],aiProviderType:"openai",embeddedLLM:{enabled:false,model:"llama3.2:1b-instruct-q4_K_M",port:11434},enableFrameCache:true,enableUiMonitoring:false,aiMaxContextChars:512e3,analyticsEnabled:true,user:{token:""},customSettings:{},monitorIds:["default"],audioDevices:["default"],audioTranscriptionEngine:"whisper-large-v3-turbo",enableRealtimeAudioTranscription:false,realtimeAudioTranscriptionEngine:"deepgram",disableVision:false,aiPresets:[]}}var y=k(),f=class{settings;storePath;initialized=false;constructor(){this.settings=y,this.storePath="";}async getStorePath(){let e=process.platform,t=___default.default.homedir(),r;switch(e){case"darwin":r=i__default.default.join(t,"Library","Application Support","screenpipe");break;case"linux":let o=process.env.XDG_DATA_HOME||i__default.default.join(t,".local","share");r=i__default.default.join(o,"screenpipe");break;case"win32":r=i__default.default.join(process.env.LOCALAPPDATA||i__default.default.join(t,"AppData","Local"),"screenpipe");break;default:throw new Error(`unsupported platform: ${e}`)}let s=i__default.default.join(r,"profiles.bin"),a="default";try{let o=await p__default.default.readFile(s),u=JSON.parse(o.toString());u.activeProfile&&(a=u.activeProfile);}catch{}return a==="default"?i__default.default.join(r,"store.bin"):i__default.default.join(r,`store-${a}.bin`)}async init(){if(!p__default.default||!i__default.default)throw new Error("failed to load required modules");this.storePath=await this.getStorePath();try{await p__default.default.mkdir(i__default.default.dirname(this.storePath),{recursive:!0});let e=await p__default.default.readFile(this.storePath),t=JSON.parse(e.toString());this.settings={...y,...P(t)},this.initialized=!0;}catch(e){if(e.code==="ENOENT")await this.save(),this.initialized=true;else throw e}}async save(){await p__default.default.mkdir(i__default.default.dirname(this.storePath),{recursive:true});let e=S(this.settings);await p__default.default.writeFile(this.storePath,JSON.stringify(e,null,2));}async get(e){return this.initialized||await this.init(),this.settings[e]}async set(e,t){this.initialized||await this.init(),this.settings[e]=t,await this.save();}async getAll(){return await this.init(),{...this.settings}}async update(e){this.initialized||await this.init(),this.settings={...this.settings,...e},await this.save();}async reset(){this.settings={...y},await this.save();}async resetKey(e){this.initialized||await this.init(),this.settings[e]=y[e],await this.save();}async getCustomSetting(e,t){return this.initialized||await this.init(),this.settings.customSettings?.[e]?.[t]}async setCustomSetting(e,t,r){this.initialized||await this.init(),this.settings.customSettings=this.settings.customSettings||{},this.settings.customSettings[e]=this.settings.customSettings[e]||{},this.settings.customSettings[e][t]=r,await this.save();}async getNamespaceSettings(e){return this.initialized||await this.init(),this.settings.customSettings?.[e]}async updateNamespaceSettings(e,t){this.initialized||await this.init(),this.settings.customSettings=this.settings.customSettings||{},this.settings.customSettings[e]=t,await this.save();}};async function J(){return new Promise((n,e)=>{let t=net.createServer();t.unref(),t.on("error",e),t.listen(0,()=>{let r=t.address().port;t.close(()=>n(r));});})}var g=class{actionServerPort;actionServerProcess;async send(e){this.actionServerPort||(this.actionServerPort=await J(),this.actionServerProcess=child_process.fork("./inbox-server.js",[this.actionServerPort.toString()])),e.actions&&(e.actions=e.actions.map(t=>{let r=crypto.randomUUID();return {label:t.label,action:r,port:this.actionServerPort,callback:t.callback}}));try{return (await fetch("http://localhost:11435/inbox",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...e,type:"inbox",actionServerPort:this.actionServerPort})})).ok}catch(t){return console.error("failed to send inbox message:",t),false}}};var w=class{async list(){try{let t=await fetch("http://localhost:3030/pipes/list",{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`http error! status: ${t.status}`);return {success:!0,data:(await t.json()).data}}catch(e){return console.error("failed to list pipes:",e),{success:false,error:e}}}async download(e){try{let r=await fetch("http://localhost:3030/pipes/download",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e})});if(!r.ok)throw new Error(`http error! status: ${r.status}`);return {success:!0,data:(await r.json()).data}}catch(t){return console.error("failed to download pipe:",t),{success:false,error:t}}}async enable(e){try{return (await fetch("http://localhost:3030/pipes/enable",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:e})})).ok}catch(t){return console.error("failed to enable pipe:",t),false}}async disable(e){try{return (await fetch("http://localhost:3030/pipes/disable",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:e})})).ok}catch(t){return console.error("failed to disable pipe:",t),false}}async update(e,t){try{return (await fetch("http://localhost:3030/pipes/update",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:e,config:t})})).ok}catch(r){return console.error("failed to update pipe:",r),false}}async info(e){try{let r=await fetch(`http://localhost:3030/pipes/info/${e}`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!r.ok)throw new Error(`http error! status: ${r.status}`);return {success:!0,data:(await r.json()).data}}catch(t){return console.error("failed to get pipe info:",t),{success:false,error:t}}}async downloadPrivate(e,t,r){try{let a=await fetch("http://localhost:3030/pipes/download-private",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e,pipe_name:t,pipe_id:r})});if(!a.ok)throw new Error(`http error! status: ${a.status}`);return {success:!0,data:(await a.json()).data}}catch(s){return console.error("failed to download private pipe:",s),{success:false,error:s}}}async delete(e){try{return (await fetch("http://localhost:3030/pipes/delete",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({pipe_id:e})})).ok}catch(t){return console.error("failed to delete pipe:",t),false}}};var v=false,l=null,I="phc_Bt8GoTBPgkCpDrbaIZzJIEYt0CrJjhBiuLaBck1clce",U="https://eu.i.posthog.com";function O(n){l=n;}function $(n,e){!v&&l&&(l.init(I,{api_host:U,distinct_id:n,email:e}),l.identify(n,{email:e}),v=true);}async function b(n,e){if(!l)return;$(e?.distinct_id,e?.email);let{distinct_id:t,...r}=e||{};l.capture(n,r);}async function A(n,e){if(!l)return;$(e?.distinct_id,e?.email);let{distinct_id:t,...r}=e||{};l.capture(n,{feature:"main",...r});}var x=class{baseUrl;pixel;constructor(e="http://localhost:3030"){this.baseUrl=e,this.pixel={type:t=>this.sendInputControl({type:"WriteText",data:t}),press:t=>this.sendInputControl({type:"KeyPress",data:t}),moveMouse:(t,r)=>this.sendInputControl({type:"MouseMove",data:{x:t,y:r}}),click:t=>this.sendInputControl({type:"MouseClick",data:t})};}async sendInputControl(e){try{let t=await fetch(`${this.baseUrl}/experimental/operator/pixel`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({action:e})});if(!t.ok)throw new Error(`http error! status: ${t.status}`);return (await t.json()).success}catch(t){return console.error("failed to control input:",t),false}}locator(e){if(e.role&&e.id)throw new Error("only one of 'role' or 'id' can be specified. need both? dm us!");let t={app_name:e.app,window_name:e.window,locator:e.role||(e.id?`#${e.id}`:""),use_background_apps:e.useBackgroundApps,activate_app:e.activateApp};return new T(this.baseUrl,t)}async click(e){let t={app_name:e.app,window_name:e.window,locator:`#${e.id}`,use_background_apps:e.useBackgroundApps,activate_app:e.activateApp!==false},r=await fetch(`${this.baseUrl}/experimental/operator/click`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:t})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to click element: ${o.error||r.statusText}`)}catch{throw new Error(`failed to click element (status ${r.status}): ${a||r.statusText}`)}}let s=await r.json();if(console.log("debug: click response data:",JSON.stringify(s,null,2)),!s.success)throw new Error(`click operation failed: ${s.error||"unknown error"}`);return s.result?c(s.result):s.method?{method:s.method,coordinates:s.coordinates,details:s.details||"Click operation succeeded"}:(console.log("warning: click response missing expected structure, creating fallback object"),{method:"MouseSimulation",coordinates:undefined,details:"Click operation succeeded but returned unexpected data structure"})}async fill(e){let t={app_name:e.app,locator:`#${e.id}`,use_background_apps:e.useBackgroundApps,activate_app:e.activateApp!==false};console.log("selector",t);let r=await fetch(`${this.baseUrl}/experimental/operator/type`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:t,text:e.value})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to type text: ${o.error||r.statusText}`)}catch{throw new Error(`failed to type text (status ${r.status}): ${a||r.statusText}`)}}return (await r.json()).success}getByRole(e,t){return this.locator({app:t?.app||"",window:t?.window,role:e,useBackgroundApps:t?.useBackgroundApps,activateApp:t?.activateApp})}getById(e,t){return this.locator({app:t?.app||"",window:t?.window,id:e,useBackgroundApps:t?.useBackgroundApps,activateApp:t?.activateApp})}async getText(e){let t={appName:e.app,windowName:e.window,maxDepth:e.maxDepth,useBackgroundApps:e.useBackgroundApps,activateApp:e.activateApp!==false},r=await fetch(`${this.baseUrl}/experimental/operator/get_text`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(h(t))});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to get text: ${o.error||r.statusText}`)}catch{throw new Error(`failed to get text (status ${r.status}): ${a||r.statusText}`)}}let s=await r.json();if(console.log("debug: text response data:",JSON.stringify(s,null,2)),!s.success)throw new Error(`get_text operation failed: ${s.error||"unknown error"}`);return c(s)}async getInteractableElements(e){let t={appName:e.app,windowName:e.window,withTextOnly:e.withTextOnly,interactableOnly:e.interactableOnly,includeSometimesInteractable:e.includeSometimesInteractable,maxElements:e.maxElements,useBackgroundApps:e.useBackgroundApps,activateApp:e.activateApp},r=await fetch(`${this.baseUrl}/experimental/operator/list-interactable-elements`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(h(t))});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to get interactable elements: ${o.error||r.statusText}`)}catch{throw new Error(`failed to get interactable elements (status ${r.status}): ${a||r.statusText}`)}}let s=await r.json();return console.log("debug: text response data:",JSON.stringify(s,null,2)),c(s)}async clickByIndex(e){let t=await fetch(`${this.baseUrl}/experimental/operator/click-by-index`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({element_index:e})});if(!t.ok){let s=await t.text();console.log("error response:",s);try{let a=JSON.parse(s);throw new Error(`failed to click element by index: ${a.error||t.statusText}`)}catch{throw new Error(`failed to click element by index (status ${t.status}): ${s||t.statusText}`)}}let r=await t.json();if(!r.success)throw new Error(`click operation failed: ${r.message||"unknown error"}`);return r.success}async typeByIndex(e,t){let r=await fetch(`${this.baseUrl}/experimental/operator/type-by-index`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({element_index:e,text:t})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to type text into element by index: ${o.error||r.statusText}`)}catch{throw new Error(`failed to type text into element by index (status ${r.status}): ${a||r.statusText}`)}}let s=await r.json();if(!s.success)throw new Error(`type operation failed: ${s.message||"unknown error"}`);return s.success}async pressKey(e){let t={app_name:e.app,window_name:e.window,locator:`#${e.id}`,use_background_apps:e.useBackgroundApps,activate_app:e.activateApp!==false},r=await fetch(`${this.baseUrl}/experimental/operator/press-key`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(h({selector:t,keyCombo:e.key}))});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to press key: ${o.error||r.statusText}`)}catch{throw new Error(`failed to press key (status ${r.status}): ${a||r.statusText}`)}}return (await r.json()).success}async pressKeyByIndex(e,t){let r=await fetch(`${this.baseUrl}/experimental/operator/press-key-by-index`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({element_index:e,key_combo:t})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to press key on element by index: ${o.error||r.statusText}`)}catch{throw new Error(`failed to press key on element by index (status ${r.status}): ${a||r.statusText}`)}}let s=await r.json();if(!s.success)throw new Error(`press key operation failed: ${s.message||"unknown error"}`);return s.success}async openApplication(e){let t=await fetch(`${this.baseUrl}/experimental/operator/open-application`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({app_name:e})});if(!t.ok){let s=await t.text();console.log("error response:",s);try{let a=JSON.parse(s);throw new Error(`failed to open application: ${a.error||t.statusText}`)}catch{throw new Error(`failed to open application (status ${t.status}): ${s||t.statusText}`)}}let r=await t.json();if(!r.success)throw new Error(`open application operation failed: ${r.message||"unknown error"}`);return r.success}async openUrl(e,t){let r=await fetch(`${this.baseUrl}/experimental/operator/open-url`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e,browser:t})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to open url: ${o.error||r.statusText}`)}catch{throw new Error(`failed to open url (status ${r.status}): ${a||r.statusText}`)}}let s=await r.json();if(!s.success)throw new Error(`open url operation failed: ${s.message||"unknown error"}`);return s.success}async scroll(e){let t={app_name:e.app,window_name:e.window,locator:e.id?`#${e.id}`:"",use_background_apps:e.useBackgroundApps,activate_app:e.activateApp!==false},r=await fetch(`${this.baseUrl}/experimental/operator/scroll`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:t,direction:e.direction,amount:e.amount})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to scroll element: ${o.error||r.statusText}`)}catch{throw new Error(`failed to scroll element (status ${r.status}): ${a||r.statusText}`)}}return (await r.json()).success}},T=class{baseUrl;selector;constructor(e,t){this.baseUrl=e,this.selector=t;}async first(e){let t=await this.all(1,e);return t.length>0?t[0]:null}async all(e,t){let r=await fetch(`${this.baseUrl}/experimental/operator`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:this.selector,max_results:e,max_depth:t})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to find elements: ${o.error||r.statusText}`)}catch{throw new Error(`failed to find elements (status ${r.status}): ${a||r.statusText}`)}}return (await r.json()).data}async click(){let e=await fetch(`${this.baseUrl}/experimental/operator/click`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:{...this.selector,activate_app:this.selector.activate_app!==false}})});if(!e.ok){let r=await e.text();console.log("error response:",r);try{let s=JSON.parse(r);throw new Error(`failed to click element: ${s.error||e.statusText}`)}catch{throw new Error(`failed to click element (status ${e.status}): ${r||e.statusText}`)}}let t=await e.json();if(console.log("debug: click response data:",JSON.stringify(t,null,2)),!t.success)throw new Error(`click operation failed: ${t.error||"unknown error"}`);return t.result?t.result:t.method?{method:t.method,coordinates:t.coordinates,details:t.details||"Click operation succeeded"}:(console.log("warning: click response missing expected structure, creating fallback object"),{method:"MouseSimulation",coordinates:undefined,details:"Click operation succeeded but returned unexpected data structure"})}async fill(e){let t=await fetch(`${this.baseUrl}/experimental/operator/type`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:{...this.selector,activate_app:this.selector.activate_app!==false},text:e})});if(!t.ok){let s=await t.text();console.log("error response:",s);try{let a=JSON.parse(s);throw new Error(`failed to type text: ${a.error||t.statusText}`)}catch{throw new Error(`failed to type text (status ${t.status}): ${s||t.statusText}`)}}return (await t.json()).success}async exists(){try{return !!await this.first()}catch{return false}}async waitFor(e={}){let t=Date.now(),r=e.timeout||3e4;for(;Date.now()-t<r;){try{let s=await this.first();if(s)return s}catch{}await new Promise(s=>setTimeout(s,100));}return null}async pressKey(e){let t=await fetch(`${this.baseUrl}/experimental/operator/press-key`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:{...this.selector,activate_app:this.selector.activate_app!==false},key_combo:e})});if(!t.ok){let s=await t.text();console.log("error response:",s);try{let a=JSON.parse(s);throw new Error(`failed to press key: ${a.error||t.statusText}`)}catch{throw new Error(`failed to press key (status ${t.status}): ${s||t.statusText}`)}}return (await t.json()).success}async scroll(e,t){let r=await fetch(`${this.baseUrl}/experimental/operator/scroll`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({selector:{...this.selector,activate_app:this.selector.activate_app!==false},direction:e,amount:t})});if(!r.ok){let a=await r.text();console.log("error response:",a);try{let o=JSON.parse(a);throw new Error(`failed to scroll element: ${o.error||r.statusText}`)}catch{throw new Error(`failed to scroll element (status ${r.status}): ${a||r.statusText}`)}}return (await r.json()).success}};O({init:d__default.default.init.bind(d__default.default),identify:d__default.default.identify.bind(d__default.default),capture:d__default.default.capture.bind(d__default.default)});var E=class{analyticsInitialized=false;analyticsEnabled=true;settings=new f;inbox=new g;pipes=new w;operator=new x;async sendDesktopNotification(e){await this.initAnalyticsIfNeeded();let t="http://localhost:11435";try{return await fetch(`${t}/notify`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),await b("notification_sent",{success:!0}),!0}catch(r){return console.error("failed to send notification:",r),false}}async queryScreenpipe(e){await this.initAnalyticsIfNeeded();let t=new URLSearchParams;Object.entries(e).forEach(([s,a])=>{if(a!==undefined&&a!=="")if(s==="speakerIds"&&Array.isArray(a))a.length>0&&t.append(m(s),a.join(","));else {let o=m(s);t.append(o,a.toString());}});let r=`http://localhost:3030/search?${t}`;try{let s=await fetch(r);if(!s.ok){let o=await s.text(),u;try{u=JSON.parse(o),console.error("screenpipe api error:",{status:s.status,error:u});}catch{console.error("screenpipe api error:",{status:s.status,error:o});}throw new Error(`http error! status: ${s.status}`)}let a=await s.json();return await b("search_performed",{content_type:e.contentType,result_count:a.pagination.total}),c(a)}catch(s){throw console.error("error querying screenpipe:",s),s}}async initAnalyticsIfNeeded(){if(this.analyticsInitialized)return;let e=await this.settings.getAll();this.analyticsEnabled=e.analyticsEnabled,e.analyticsEnabled&&(this.analyticsInitialized=true);}async captureEvent(e,t){if(!this.analyticsEnabled)return;await this.initAnalyticsIfNeeded();let r=await this.settings.getAll();return b(e,{distinct_id:r.user.id,email:r.user.email,...t})}async captureMainFeatureEvent(e,t){if(this.analyticsEnabled)return await this.initAnalyticsIfNeeded(),A(e,t)}},ae=new E;
exports.getDefaultSettings=k;exports.pipe=ae;//# sourceMappingURL=index.cjs.map
//# sourceMappingURL=index.cjs.map