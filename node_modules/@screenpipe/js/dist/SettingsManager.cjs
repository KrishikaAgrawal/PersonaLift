'use strict';var c=require('fs/promises'),s=require('path'),m=require('os');function _interopDefault(e){return e&&e.__esModule?e:{default:e}}var c__default=/*#__PURE__*/_interopDefault(c);var s__default=/*#__PURE__*/_interopDefault(s);var m__default=/*#__PURE__*/_interopDefault(m);var g=(n,t="")=>Object.keys(n).reduce((i,e)=>{let a=t.length?t+".":"";return typeof n[e]=="object"&&n[e]!==null&&!Array.isArray(n[e])?Object.assign(i,g(n[e],a+e)):i[a+e]=n[e],i},{}),h=n=>{let t={};for(let i in n){let e=i.split("."),a=t;for(let o=0;o<e.length;o++){let r=e[o];o===e.length-1?a[r]=n[i]:(a[r]=a[r]||{},a=a[r]);}}return t};function u(){return {openaiApiKey:"",deepgramApiKey:"",aiModel:"gpt-4o",aiUrl:"https://api.openai.com/v1",customPrompt:"Rules:\n    - You can analyze/view/show/access videos to the user by putting .mp4 files in a code block (we'll render it) like this: `/users/video.mp4`, use the exact, absolute, file path from file_path property\n    - Do not try to embed video in links (e.g. [](.mp4) or https://.mp4) instead put the file_path in a code block using backticks\n    - Do not put video in multiline code block it will not render the video (e.g. ```bash\n.mp4``` IS WRONG) instead using inline code block with single backtick\n    - Always answer my question/intent, do not make up things\n    ",port:3030,dataDir:"default",disableAudio:false,ignoredWindows:[],includedWindows:[],aiProviderType:"openai",embeddedLLM:{enabled:false,model:"llama3.2:1b-instruct-q4_K_M",port:11434},enableFrameCache:true,enableUiMonitoring:false,aiMaxContextChars:512e3,analyticsEnabled:true,user:{token:""},customSettings:{},monitorIds:["default"],audioDevices:["default"],audioTranscriptionEngine:"whisper-large-v3-turbo",enableRealtimeAudioTranscription:false,realtimeAudioTranscriptionEngine:"deepgram",disableVision:false,aiPresets:[]}}var l=u(),p=class{settings;storePath;initialized=false;constructor(){this.settings=l,this.storePath="";}async getStorePath(){let t=process.platform,i=m__default.default.homedir(),e;switch(t){case"darwin":e=s__default.default.join(i,"Library","Application Support","screenpipe");break;case"linux":let r=process.env.XDG_DATA_HOME||s__default.default.join(i,".local","share");e=s__default.default.join(r,"screenpipe");break;case"win32":e=s__default.default.join(process.env.LOCALAPPDATA||s__default.default.join(i,"AppData","Local"),"screenpipe");break;default:throw new Error(`unsupported platform: ${t}`)}let a=s__default.default.join(e,"profiles.bin"),o="default";try{let r=await c__default.default.readFile(a),d=JSON.parse(r.toString());d.activeProfile&&(o=d.activeProfile);}catch{}return o==="default"?s__default.default.join(e,"store.bin"):s__default.default.join(e,`store-${o}.bin`)}async init(){if(!c__default.default||!s__default.default)throw new Error("failed to load required modules");this.storePath=await this.getStorePath();try{await c__default.default.mkdir(s__default.default.dirname(this.storePath),{recursive:!0});let t=await c__default.default.readFile(this.storePath),i=JSON.parse(t.toString());this.settings={...l,...h(i)},this.initialized=!0;}catch(t){if(t.code==="ENOENT")await this.save(),this.initialized=true;else throw t}}async save(){await c__default.default.mkdir(s__default.default.dirname(this.storePath),{recursive:true});let t=g(this.settings);await c__default.default.writeFile(this.storePath,JSON.stringify(t,null,2));}async get(t){return this.initialized||await this.init(),this.settings[t]}async set(t,i){this.initialized||await this.init(),this.settings[t]=i,await this.save();}async getAll(){return await this.init(),{...this.settings}}async update(t){this.initialized||await this.init(),this.settings={...this.settings,...t},await this.save();}async reset(){this.settings={...l},await this.save();}async resetKey(t){this.initialized||await this.init(),this.settings[t]=l[t],await this.save();}async getCustomSetting(t,i){return this.initialized||await this.init(),this.settings.customSettings?.[t]?.[i]}async setCustomSetting(t,i,e){this.initialized||await this.init(),this.settings.customSettings=this.settings.customSettings||{},this.settings.customSettings[t]=this.settings.customSettings[t]||{},this.settings.customSettings[t][i]=e,await this.save();}async getNamespaceSettings(t){return this.initialized||await this.init(),this.settings.customSettings?.[t]}async updateNamespaceSettings(t,i){this.initialized||await this.init(),this.settings.customSettings=this.settings.customSettings||{},this.settings.customSettings[t]=i,await this.save();}};
exports.SettingsManager=p;//# sourceMappingURL=SettingsManager.cjs.map
//# sourceMappingURL=SettingsManager.cjs.map