import { S as Settings } from './types--V_ysljQ.js';

declare class SettingsManager {
    private settings;
    private storePath;
    private initialized;
    constructor();
    private getStorePath;
    init(): Promise<void>;
    save(): Promise<void>;
    get<K extends keyof Settings>(key: K): Promise<Settings[K]>;
    set<K extends keyof Settings>(key: K, value: Settings[K]): Promise<void>;
    getAll(): Promise<Settings>;
    update(newSettings: Partial<Settings>): Promise<void>;
    reset(): Promise<void>;
    resetKey<K extends keyof Settings>(key: K): Promise<void>;
    getCustomSetting(namespace: string, key: string): Promise<any>;
    setCustomSetting(namespace: string, key: string, value: any): Promise<void>;
    getNamespaceSettings(namespace: string): Promise<Record<string, any> | undefined>;
    updateNamespaceSettings(namespace: string, settings: Record<string, any>): Promise<void>;
}

export { SettingsManager };
