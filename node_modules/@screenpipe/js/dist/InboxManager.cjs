'use strict';var child_process=require('child_process'),net=require('net');async function a(){return new Promise((t,o)=>{let r=net.createServer();r.unref(),r.on("error",o),r.listen(0,()=>{let e=r.address().port;r.close(()=>t(e));});})}var s=class{actionServerPort;actionServerProcess;async send(o){this.actionServerPort||(this.actionServerPort=await a(),this.actionServerProcess=child_process.fork("./inbox-server.js",[this.actionServerPort.toString()])),o.actions&&(o.actions=o.actions.map(r=>{let e=crypto.randomUUID();return {label:r.label,action:e,port:this.actionServerPort,callback:r.callback}}));try{return (await fetch("http://localhost:11435/inbox",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({...o,type:"inbox",actionServerPort:this.actionServerPort})})).ok}catch(r){return console.error("failed to send inbox message:",r),false}}};
exports.InboxManager=s;//# sourceMappingURL=InboxManager.cjs.map
//# sourceMappingURL=InboxManager.cjs.map